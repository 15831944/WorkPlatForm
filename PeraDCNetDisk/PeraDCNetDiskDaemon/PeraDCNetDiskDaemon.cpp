
// PeraDCNetDiskDaemon.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "PeraDCNetDiskDaemon.h"
#include "PeraDCNetDiskDaemonDlg.h"
#include "IceService.h"
#include "tools.h"
#include "CrashHandler.h"
#include "PeraHttpDownloadMgr.h"
#include "PeraUploadManager.h"
#include "PeraCopyManager.h"
#include "PeraNetDiskSetting.h"
#ifdef _DEBUG
#define new DEBUG_NEW
#endif

// CPeraDCNetDiskDaemonApp

BEGIN_MESSAGE_MAP(CPeraDCNetDiskDaemonApp, CWinApp)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CPeraDCNetDiskDaemonApp 构造

CPeraDCNetDiskDaemonApp::CPeraDCNetDiskDaemonApp()
{
	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}


// 唯一的一个 CPeraDCNetDiskDaemonApp 对象

CPeraDCNetDiskDaemonApp theApp;

// CPeraDCNetDiskDaemonApp 初始化

BOOL CPeraDCNetDiskDaemonApp::InitInstance()
{
	HANDLE hMutex=CreateMutex(NULL,TRUE,"PeraDCNetDiskDaemon");
	if(hMutex)
	{
		if(ERROR_ALREADY_EXISTS==GetLastError())
		{
			//AfxMessageBox("程序已在运行中！");
			CloseHandle(hMutex);
			hMutex = NULL;
			return FALSE;
		}
	}

	CWinApp::InitInstance();

	ZTools::InitZToolsLog();
	CCrashHandler ch;
	ch.SetProcessExceptionHandlers();
	ch.SetThreadExceptionHandlers();

	GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

	thePersistMrg.Init();

	theDownloadMgr.Init();
	theSetting.GetSettingFromConfig();
	theDownloadMgr.GetSysConfig();

	if ( !theDownloadMgr.RecoverDownTask() )
	{
		AfxMessageBox( "下载模块恢复数据失败" );
	}



	// 启动时检查加载历史任务
	CPeraUploadManager::Instance()->LoadHistoryUploadTask(); 
	CPeraCopyManager::Instance()->LoadHistoryCopyTask();

	CNTServiceCommandLineInfo cmdInfo;
	CIceService Service;
// 	Service.SetAllowCommandLine(TRUE);
// 	Service.SetAllowNameChange(TRUE);       
// 	Service.SetAllowDescriptionChange(TRUE);
// 	Service.SetAllowDisplayNameChange(TRUE);
	//Service.ParseCommandLine(cmdInfo);
	//Service.ProcessShellCommand(cmdInfo);

	Service.ServiceMain(0, NULL);
	CloseHandle(hMutex);



	// 创建 shell 管理器，以防对话框包含
	// 任何 shell 树视图控件或 shell 列表视图控件。
	//CShellManager *pShellManager = new CShellManager;

	//// 标准初始化
	//// 如果未使用这些功能并希望减小
	//// 最终可执行文件的大小，则应移除下列
	//// 不需要的特定初始化例程
	//// 更改用于存储设置的注册表项
	//// TODO: 应适当修改该字符串，
	//// 例如修改为公司或组织名
	//SetRegistryKey(_T("应用程序向导生成的本地应用程序"));

 //	CPeraDCNetDiskDaemonDlg dlg;
 //	m_pMainWnd = &dlg;
 //	INT_PTR nResponse = dlg.DoModal();
 //	if (nResponse == IDOK)
 //	{
 //		// TODO: 在此放置处理何时用
 //		//  “确定”来关闭对话框的代码
 //	}
 //	else if (nResponse == IDCANCEL)
 //	{
 //		// TODO: 在此放置处理何时用
 //		//  “取消”来关闭对话框的代码
 //	}

	//// 删除上面创建的 shell 管理器。
 //	if (pShellManager != NULL)
 //	{
 //		delete pShellManager;
 //	}

	// 由于对话框已关闭，所以将返回 FALSE 以便退出应用程序，
	//  而不是启动应用程序的消息泵。
	return FALSE;
}
int CPeraDCNetDiskDaemonApp::ExitInstance()
{
	GdiplusShutdown(gdiplusToken);
	theDownloadMgr.Release();
	thePersistMrg.Release();
	return TRUE;
}