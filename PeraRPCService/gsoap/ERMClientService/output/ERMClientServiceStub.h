/* ERMClientServiceStub.h
   Generated by gSOAP 2.8.17r from ERMClientService.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef ERMClientServiceStub_H
#define ERMClientServiceStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ERMClientService1	"http://remoting.erm.norteksoft.com"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20817
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


namespace ERMClientService {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__dologinResponse
#define SOAP_TYPE_ERMClientService___ERMClientService1__dologinResponse (11)
/* Operation wrapper: */
struct __ERMClientService1__dologinResponse
{
public:
	std::string ERMClientService1__dologinResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 11; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__dologinResponse */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__dologin
#define SOAP_TYPE_ERMClientService___ERMClientService1__dologin (12)
/* Operation wrapper: */
struct __ERMClientService1__dologin
{
public:
	std::string ERMClientService1__dologin;	/* required element of type xsd:string */
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__dologin */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__logoutResponse
#define SOAP_TYPE_ERMClientService___ERMClientService1__logoutResponse (14)
/* Operation wrapper: */
struct __ERMClientService1__logoutResponse
{
public:
	std::string ERMClientService1__logoutResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 14; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__logoutResponse */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__logout
#define SOAP_TYPE_ERMClientService___ERMClientService1__logout (15)
/* Operation wrapper: */
struct __ERMClientService1__logout
{
public:
	std::string ERMClientService1__logout;	/* required element of type xsd:string */
public:
	int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__logout */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTimeResponse
#define SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTimeResponse (17)
/* Operation wrapper: */
struct __ERMClientService1__updateLastAccessedTimeResponse
{
public:
	std::string ERMClientService1__updateLastAccessedTimeResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTimeResponse */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTime
#define SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTime (18)
/* Operation wrapper: */
struct __ERMClientService1__updateLastAccessedTime
{
public:
	std::string ERMClientService1__updateLastAccessedTime;	/* required element of type xsd:string */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__updateLastAccessedTime */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserNameResponse
#define SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserNameResponse (20)
/* Operation wrapper: */
struct __ERMClientService1__getUserByUserNameResponse
{
public:
	std::string ERMClientService1__getUserByUserNameResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 20; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserNameResponse */
};
#endif

#ifndef SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserName
#define SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserName (21)
/* Operation wrapper: */
struct __ERMClientService1__getUserByUserName
{
public:
	std::string ERMClientService1__getUserByUserName;	/* required element of type xsd:string */
public:
	int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_ERMClientService___ERMClientService1__getUserByUserName */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ERMClientService_SOAP_ENV__Header
#define SOAP_TYPE_ERMClientService_SOAP_ENV__Header (22)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 22; } /* = unique type id SOAP_TYPE_ERMClientService_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ERMClientService_SOAP_ENV__Code
#define SOAP_TYPE_ERMClientService_SOAP_ENV__Code (23)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_ERMClientService_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ERMClientService_SOAP_ENV__Detail
#define SOAP_TYPE_ERMClientService_SOAP_ENV__Detail (25)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 25; } /* = unique type id SOAP_TYPE_ERMClientService_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ERMClientService_SOAP_ENV__Reason
#define SOAP_TYPE_ERMClientService_SOAP_ENV__Reason (28)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_ERMClientService_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ERMClientService_SOAP_ENV__Fault
#define SOAP_TYPE_ERMClientService_SOAP_ENV__Fault (29)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_ERMClientService_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_ERMClientService__QName
#define SOAP_TYPE_ERMClientService__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_ERMClientService__XML
#define SOAP_TYPE_ERMClientService__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace ERMClientService


#endif

/* End of ERMClientServiceStub.h */
